def solution(S, P, Q):
    N = len(S)
    M = len(P)
    impact_factor = {'A': 1, 'C': 2, 'G': 3, 'T': 4}

    prefix_sums = [[0] * (N + 1) for _ in range(4)]
    for i in range(1, N + 1):
        nucleotide = S[i - 1]
        for j in range(4):
            prefix_sums[j][i] = prefix_sums[j][i - 1] + (impact_factor[nucleotide] == j + 1)

    
    result = [0] * M
    for i in range(M):
        start = P[i]
        end = Q[i] + 1

        for j in range(4):
            if prefix_sums[j][end] - prefix_sums[j][start] > 0:
                result[i] = j + 1
                break

    return result

